basePath: /
definitions:
  handlers.createPetDTO:
    properties:
      age:
        type: integer
      animal_type:
        type: string
      behavior:
        type: string
      condition:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      owner_id:
        type: integer
      research_status:
        type: string
      vet_id:
        type: integer
      weight:
        type: number
    type: object
  models.ErrorDTO:
    properties:
      message:
        type: string
    type: object
  models.OutputPetDTO:
    properties:
      owner_id:
        type: integer
      pet_info:
        $ref: '#/definitions/models.Pet'
      vet_id:
        type: integer
    type: object
  models.Owner:
    properties:
      email:
        type: string
      fullname:
        type: string
      id:
        type: integer
      password_hash:
        description: password hash
        type: string
      phone:
        type: string
    type: object
  models.Pet:
    properties:
      age:
        type: integer
      animal_type:
        type: string
      behavior:
        type: string
      condition:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      research_status:
        type: string
      weight:
        type: number
    type: object
info:
  contact: {}
  description: auth service
  title: Vet clinic auth service
  version: "0.1"
paths:
  /info/v1/owner:
    get:
      description: Get all owners details
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved owners
          schema:
            $ref: '#/definitions/models.Owner'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorDTO'
      summary: Get all owners
      tags:
      - owners
  /info/v1/owner/:
    post:
      consumes:
      - application/json
      description: Create a new owner in the system
      parameters:
      - description: owner details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Owner'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created owner
          schema:
            $ref: '#/definitions/models.Owner'
        "400":
          description: Invalid input body
          schema:
            $ref: '#/definitions/models.ErrorDTO'
        "409":
          description: Owner with same email already exists
          schema:
            $ref: '#/definitions/models.ErrorDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorDTO'
      summary: Create owner
      tags:
      - owners
  /info/v1/owner/{id}:
    delete:
      consumes:
      - application/json
      description: Delete owner details by ID
      parameters:
      - description: owner ID
        in: path
        name: id
        required: true
        type: integer
      - description: owner details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Owner'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted owner
          schema:
            $ref: '#/definitions/models.Owner'
        "404":
          description: owner not found
          schema:
            $ref: '#/definitions/models.ErrorDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorDTO'
      summary: Delete owner
      tags:
      - owners
    get:
      description: Get owner details by ID
      parameters:
      - description: owner ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved owner
          schema:
            $ref: '#/definitions/models.Owner'
        "404":
          description: owner not found
          schema:
            $ref: '#/definitions/models.ErrorDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorDTO'
      summary: Get owner
      tags:
      - owners
    put:
      consumes:
      - application/json
      description: Update owner details by ID
      parameters:
      - description: owner ID
        in: path
        name: id
        required: true
        type: integer
      - description: owner details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Owner'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated owner
          schema:
            $ref: '#/definitions/models.Owner'
        "400":
          description: Invalid input body or owner ID
          schema:
            $ref: '#/definitions/models.ErrorDTO'
        "404":
          description: Owner not found
          schema:
            $ref: '#/definitions/models.ErrorDTO'
        "409":
          description: Owner with same email already exists
          schema:
            $ref: '#/definitions/models.ErrorDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorDTO'
      summary: Update owner
      tags:
      - owners
  /info/v1/pet:
    get:
      description: Get all pets details
      parameters:
      - description: Pet ID
        in: query
        name: pet_id
        type: integer
      - description: Veterinarian ID
        in: query
        name: vet_id
        type: integer
      - description: Owner ID
        in: query
        name: owner_id
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved pets
          schema:
            $ref: '#/definitions/models.OutputPetDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorDTO'
      summary: Get all pets
      tags:
      - pets
    post:
      consumes:
      - application/json
      description: Create a new pet in the system. Age & weight should be > 0 & Gender
        should be 'Male' or 'Female'
      parameters:
      - description: Pet details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.createPetDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created pet
          schema:
            type: number
        "400":
          description: Invalid input body
          schema:
            $ref: '#/definitions/models.ErrorDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorDTO'
      summary: Create Pet
      tags:
      - pets
  /info/v1/pet/{id}:
    delete:
      consumes:
      - application/json
      description: Delete pet details by ID
      parameters:
      - description: Pet ID
        in: path
        name: id
        required: true
        type: integer
      - description: Pet details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Pet'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted pet
          schema:
            $ref: '#/definitions/models.Pet'
        "404":
          description: Pet not found
          schema:
            $ref: '#/definitions/models.ErrorDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorDTO'
      summary: Delete Pet
      tags:
      - pets
    get:
      description: Get pet details by ID
      parameters:
      - description: Pet ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved pet
          schema:
            $ref: '#/definitions/models.Pet'
        "404":
          description: Pet not found
          schema:
            $ref: '#/definitions/models.ErrorDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorDTO'
      summary: Get Pet
      tags:
      - pets
    put:
      consumes:
      - application/json
      description: Update pet details by ID
      parameters:
      - description: Pet ID
        in: path
        name: id
        required: true
        type: integer
      - description: Pet details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Pet'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated pet
          schema:
            $ref: '#/definitions/models.Pet'
        "400":
          description: Invalid input body or pet ID
          schema:
            $ref: '#/definitions/models.ErrorDTO'
        "404":
          description: Pet not found
          schema:
            $ref: '#/definitions/models.ErrorDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorDTO'
      summary: Update Pet
      tags:
      - pets
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
